
Defaults = {
    pi = 3.1415926535897; tau = 2*pi;
    baseFreq = 440; semitoneFreqFactor = 2**(1/12);
	time = timer; timeFrac = time / $duration;
	pitch = $pitch + octave*12; octave = 0;
	freq = baseFreq * semitoneFreqFactor**pitch;
	phase = phaser freq;

    waveSin = sin(phase * tau);
    waveSawtooth = phase;
    waveSquare = phase [0,1 -- 0,-1 -- 0.5,-1 -- 0.5,1 -- 1,1];
    waveSquareIsh(delta) = phase [0,1 -- 
        delta,-1 -- 0.5,-1 -- 
        0.5+delta,1 -- 1,1];
    waveTri = phase [0,1 -- 0.5,-1 -- 1,1];
    waveTriOblong(x) = phase [0,1 -- x,-1 -- 1,1];
    waveSmooth = phase [0,1 ~~ 0.5,-1 ~~ 1,1];
    waveTing = phase [0,1 ~~ 
    	0.25,-0.5 ~~ 0.5,0.5 ~~
    	0.75,-1 ~~ 1,1];
    wave2Peaks = phase [0,1 ~~ wave2PeaksDelta,-1 ~~ 0.5,1 ~~ (1-wave2PeaksDelta),-1 ~~ 1,1];
    #waveWhat = phase [0,1 ~~ (0.5-waveWhatDelta),0 ~~ 0.5,0.5 ~~ (0.5+waveWhatDelta),-1 ~~ 1,1];
    waveWhat(delta) = phase [0,1 ~~ (0.5-delta),0 ~~ 0.5,0.5 ~~ (0.5+delta),-1 ~~ 1,1];
    waveNes = phase [0,0 -- 0.25,1 -- 0.75,-1 -- 0.75,0 -- 1,1];
    waveNes2 = phase [0,0 -- 0.5,1 -- 0.5,0 -- 1,-1];
	waveDoubleTri(x) = phase [0,-1 -- (x/2),1 -- x,-1 -- (1+x)/2,1 -- 1,-1];

    #waveSquareIshDelta = 0.1;
    wave2PeaksDelta = 0.2;
    waveWhatDelta = 0.2;
        
    ampDing = timeFrac [0,0 -- 0.01,1 -- 0.5,0.7 -- 1,0];
    ampDing2 = timeFrac [0,0 -- 0.005,1 -- 0.02,0.6 -- 0.4,0.3 -- 1,0];
    ampAah = timeFrac [0,0 -- 0.95,1 -- 1,0];
    ampTri = timeFrac [0,0 -- 0.5,1 -- 1,0];
    ampSquarish = timeFrac [0,0 -- 
    	ampSquarishDelta,1 -- 
    	(1-ampSquarishDelta),1 -- 1,0];
    ampSquarishDelta = 0.02;
    ampBoing = (timeFrac [0,0 -- 0.5,1 -- 1,0]) * (1 + sin(timeFrac*tau))/2;

    vol = 1.0;
    out = amp * wave * vol;
    
    in = ($inL + $inR) / 2;
};


voice Ding = {
    #amp = ampDing2;
	amp = time [0,0 ~~ 0.1,1 ~~ ($duration-0.1),1 ~~ $duration,0];
    #amp = time [0,0 -- 0.035,0 -- 0.04,1 
    #	-- 0.2,0.6 -- 0.4,0.4 -- $duration,0];
    vol = 0.04;
	xphase = phaser xfreq;
	xfreq = 2 + 8 * timeFrac;
	pha = (phase-0.5)*0.05;
	
    #wave = waveSmooth;
	#wave = waveSquareIsh(0.01);
	#wave = waveWhat(0.3);
    #wave = sin(pha**pha);
    octave = 1;
    #waveWhatDelta = 0.05 + 0.2*(1-timeFrac);
	f(x) = x;
	#wave = f(phase);
	#wave1 = waveDoubleTri(0.2 + 0.6 * xphase[0,0--0.5,1--1,0]);
    #wave2 = delay (0.1 + 0.3 * timeFrac), wave1;
    #wave = wave1 + wave2;
    #wave = sin(tau*phase);
	#wave = waveSmooth;
	wave = phase [0,-1 ~- 0.5,1 ~- 1,-1];

	freqRang = 0.3;
	#phaseF = ((random(0,1)) * freqRang) + (1 - freqRang/2);
	phaseF = random(1-freqRang,1+freqRang);
	phase = phaser (freq* prev phaseF);

    amp = ampDing2;
};

voice Bass = {
	vol = 0.15;
	octave = -3;
	pha = (phase-0.5)*0.05;
    wave = waveSquareIsh(0.1);
	amp = time [0,0 -- 0.01,1 
		-- 0.03,0.6
		-- ($duration-0.02),0.4 -- $duration,0];
	amp = time [0,0 -- 0.03,1 
		-- ($duration-0.3),1 -- $duration,0];
};

voice Smooth = {
	xtime = phaserT (&songtime*(5/64));
	x = &var;
	#x = xtime [0,0.5 -- 1,0.99];
	#x = (0.4 * cos &songtime) + 0.5;
	amp = time [0,0 ~~ 0.02,1 
		-~ ($duration-0.02),0.5 ~~ $duration,0];
	#wave = phase;
	wave = phase [0,1 ~~ x,-1 ~~ 1,1];
	#out = wave;
	#wave = phase [0,1 ~~ 0.5,-1 ~~ 1,1];
	vol = 0.3;
};

voice Noise = {
	amp = time[0,0 -- 0.01,1 -- 0.02,0.5 -- $duration,0];
	octave = 0;
	phase = phaser freq;
	wave = phase [0,y0 ~~ 1,y1];
	amp = time[0,0 -- 0.01,1 -- 0.02,0.5 -- $duration,0];
	vol = 0.2;
	
    y1 = onleft (phase, random(-1,1));
    y0 = onleft (phase, prev(y1));
    #y0 = onleft (x, random(-1,1));
};

Echoes =
{
	ech(i,g,d) = i + g * delay d, i;
	echs(i,g,d,o) = i + g * delay d, o;
    gain1 = 0.7;
    gain2 = 0.7;
	gain3 = 0.7;
    del1 = 0.1;
    del2 = 0.21;
	del3 = 0.45;
    x1 = ech($inL, gain1, del1, x1);
	x2 = ech(  x1, gain2, del2, x2);
    x3 = ech(  x1, gain3, del3, x3);
    out = x2;
    outR = x3;
};

Smoothe =
{
	x = (0.4*sin &songtime) + 0.5;
	#amp = time [0,0 ~~ 0.02,1 
	#	-~ ($duration-0.02),0.5 ~~ $duration,0];
	wave = in [0,1 ~~ x,-1 ~~ 1,1];
	vol = 0.3;
	out = vol * wave;
};

#Smooth -> Echoes;
#Bass -> Echoes;
Noise -> Echoes;
#Smooth -> Smoothe;

-----------------------------------------

loop
{
<
	@Smooth
	{
		{
			&var=[0,0.9 ~~ 16,0.5]
			a'abc'd'
			e2a2f'e'
		} x4
		{
		{
			gedeAede BebDebBe
		}/2 x2
		{
			&var=[0,0.5 -- 16,1]
			{ e2 {edb}*2/3 }x2
			gededbdbabag- ag-e-d- e-*8 
		}/2
		'32
		}^12
	}
	
	@Bass
	{
		{
			<AE>*2 <CG> <DA+>
		} x4
		{
			<AE>*2 <CG> <DA+>
		}^7 x4
	} *4
	
	@Noise
	{
		< 
			{'8 a8_12} ^12
			{a4x2 ed2c3b2} ^24
		> /2
	} ^12 x2 x8
> v4
} /5 x1